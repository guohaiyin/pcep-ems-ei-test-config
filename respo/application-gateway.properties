server.port=9094
spring.application.name=gateway-server
eureka.client.service-url.defaultZone=http://localhost:9091/eureka/
#在注册中心可以直接进入swagger页面
eureka.instance.status-page-url=http://localhost:${server.port}/swagger-ui.html
# 自动配置注册中心中路由 默认 false关闭
#启用基于服务发现的路由定位
spring.cloud.gateway.discovery.locator.enabled=true
# 开启小写验证，默认feign根据服务名查找都是用的全大写
#启用服务实例id名称小写支持
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
# 设置路由id
spring.cloud.gateway.routes[0].id==aim-tech
# 设置路由uri uri以lb://开头（lb代表从注册中心获取服务）,
# 后面接的就是你需要转发到的服务名称，这个服务名称必须跟eureka中的对应，否则会找不到服务,也可以是一个url
spring.cloud.gateway.routes[0].uri=lb://aim-tech
spring.cloud.gateway.routes[0].predicates[0]=Path=/tech/**
#添加过滤器生效,Spring Boot版本超过2.0.6的应该可以不用配置这个过滤器
spring.cloud.gateway.routes[0].filters[0]=SwaggerHeaderFilter
#如果用 predicates 配置了前缀，一定要用 StripPrefix 将前缀去掉，使url与服务中的url一致，否则会报404
spring.cloud.gateway.routes[0].filters[1]= StripPrefix=1

spring.cloud.gateway.routes[1].id==aim-mgt
# 设置路由uri uri以lb://开头（lb代表从注册中心获取服务）,
# 后面接的就是你需要转发到的服务名称，这个服务名称必须跟eureka中的对应，否则会找不到服务,也可以是一个url
spring.cloud.gateway.routes[1].uri=lb://aim-mgt
spring.cloud.gateway.routes[1].predicates[0]=Path=/mgt/**
#添加过滤器生效,Spring Boot版本超过2.0.6的应该可以不用配置这个过滤器
spring.cloud.gateway.routes[1].filters[0]=SwaggerHeaderFilter
#如果用 predicates 配置了前缀，一定要用 StripPrefix 将前缀去掉，使url与服务中的url一致，否则会报404
spring.cloud.gateway.routes[1].filters[1]= StripPrefix=1
#解决跨域问题
spring.cloud.gateway.routes[1].filters[2]= DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

